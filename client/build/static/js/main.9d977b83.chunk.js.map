{"version":3,"sources":["components/About.js","context/notes/NoteContext.js","components/AddNote.js","components/Login.js","components/Noteitem.js","components/Notes.js","components/Home.js","components/Navbar.js","context/notes/NoteStates.js","components/Alert.js","components/Signup.js","App.js","index.js"],"names":["About","className","noteContext","createContext","AddNote","useContext","addNote","colorMode","useState","title","description","tag","noteInputs","setNoteInputs","handleOnChange","e","target","name","value","htmlFor","type","id","onChange","minLength","required","onClick","lenTitle","length","lenDesc","preventDefault","Login","history","useHistory","loginProvider","email","password","loginInputs","setLoginInputs","handleChange","Noteitem","props","deleteNote","setCurrentNote","setMsg","note","_id","Notes","notes","updateNote","currentNote","fetchNotes","closeRef","useRef","useEffect","localStorage","getItem","push","tabIndex","ref","console","log","current","click","map","Home","Navbar","setDarkmode","location","useLocation","to","pathname","role","removeItem","NoteStates","host","userHost","setColorMode","setNotes","msg","msgType","setAlert","msgtype","a","fetch","method","headers","fetchedData","json","data","myNote","body","JSON","stringify","concat","noteId","newNote","filter","updatedNote","temp","parse","i","noteValues","document","getElementsByTagName","style","backgroundColor","token","success","setItem","authToken","signUpProvider","mySignup","Provider","children","Alert","Signup","signupInputs","setSignupInputs","App","navbarProps","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9d977b83.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About() {\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            About page\r\n        </div>\r\n    )\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nconst noteContext = createContext();\r\n\r\n\r\nexport default noteContext;","import React,{useContext, useState} from 'react'\r\nimport noteContext from '../context/notes/NoteContext'\r\n\r\nexport default function AddNote() {\r\n    const {addNote,colorMode} = useContext(noteContext);\r\n    const [noteInputs,setNoteInputs] = useState({\r\n        title:\"\",\r\n        description:\"\",\r\n        tag:\"\"\r\n    })\r\n\r\n    const handleAddNote = (e)=>{\r\n        \r\n        var lenTitle = noteInputs.title.length;\r\n        var lenDesc = noteInputs.description.length;\r\n\r\n        if (lenTitle>=1 && lenDesc >=5) {\r\n            e.preventDefault();\r\n            addNote(noteInputs.title,noteInputs.description,noteInputs.tag);\r\n        }\r\n        setNoteInputs({\r\n            title:\"\",\r\n            description:\"\",\r\n            tag:\"\"\r\n        })\r\n\r\n        \r\n    }\r\n    const handleOnChange = (e)=>{\r\n        setNoteInputs({...noteInputs, [e.target.name]:e.target.value});\r\n    }\r\n    return (\r\n        <div className=\"container mt-5 md-3\">\r\n                <h2 className={`textmode-${colorMode}`}>Add a Note</h2>\r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"title\" className={`form-label textmode-${colorMode}`}>Title</label>\r\n                        <input type=\"text\" className={`form-control inputs-${colorMode}`} id=\"title\" name=\"title\" value={noteInputs.title} onChange={handleOnChange} minLength={1} required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"description\" className={`form-label textmode-${colorMode}`} >Description</label>\r\n                        <textarea className={`form-control inputs-${colorMode}`} id=\"description\" name=\"description\" value={noteInputs.description} onChange={handleOnChange} minLength={5} required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"tag\" className={`form-label textmode-${colorMode}`} >Tag</label>\r\n                        <input className={`form-control inputs-${colorMode}`} id=\"tag\" name=\"tag\" value={noteInputs.tag} onChange={handleOnChange} />\r\n                    </div>\r\n                    \r\n                    <button type=\"submit\" className=\"btn btn-primary\" onClick={handleAddNote}>Add Note</button>\r\n                </form><br /><br />\r\n                <h3 className={`my-3 textmode-${colorMode}`} >Your Notes</h3>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useContext} from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport noteContext from '../context/notes/NoteContext';\r\nexport default function Login() {\r\n    let history = useHistory();\r\n    const {loginProvider,colorMode} = useContext(noteContext);\r\n    const [loginInputs,setLoginInputs] = useState({\r\n        email:\"\",\r\n        password:\"\"\r\n    })\r\n    const handleLogin = (e)=>{\r\n\r\n        if (loginInputs.email.length>=1 && loginInputs.password.length>=5) {\r\n            e.preventDefault();\r\n            loginProvider(loginInputs.email,loginInputs.password,history);  \r\n        }\r\n\r\n    }\r\n    const handleChange = (e)=>{\r\n        setLoginInputs({...loginInputs,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (        \r\n        <div className=\"container mt-5\">\r\n            <form>\r\n                <h2 className={`my-4 textmode-${colorMode}`}>Login to use NotesOrange</h2>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className={`form-label textmode-${colorMode}`}>Email address</label>\r\n                    <input type=\"email\" className={`form-control inputs-${colorMode}`} id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" value={loginInputs.email} onChange={handleChange} name=\"email\" required />\r\n                    <div id=\"emailHelp\" className={`form-text textmode-${colorMode}`}>We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className={`form-label textmode-${colorMode}`}>Password</label>\r\n                    <input type=\"password\" className={`form-control inputs-${colorMode}`} id=\"exampleInputPassword1\" value={loginInputs.password} onChange={handleChange} name=\"password\" required />\r\n                </div>\r\n                <div className=\"mb-3 form-check\">\r\n                    <input type=\"checkbox\" className={`form-check-input inputs-${colorMode}`} id=\"exampleCheck1\" />\r\n                    <label className={`form-check-label textmode-${colorMode}`} htmlFor=\"exampleCheck1\">Check me out</label>\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleLogin}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport noteContext from '../context/notes/NoteContext';\r\nimport './Noteitem.css'\r\nexport default function Noteitem(props) {\r\n    const {deleteNote,setCurrentNote,setMsg,colorMode} = useContext(noteContext);\r\n\r\n    //when user clicks delete icon on specific note\r\n    const handleDelete = ()=>{\r\n        deleteNote(props.note._id);//function in context\r\n        setMsg(\"Deleted Successfully\");\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-3 my-3\">\r\n                <div className={`card mode-${colorMode}`}>\r\n                    <div className=\"card-body\">\r\n                        <i className=\"far fa-edit mb-3\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\" onClick={()=>setCurrentNote(props.note)}></i>\r\n                        <h5 className=\"card-title\">{props.note.title}</h5>\r\n                        <p className=\"card-text\">{props.note.description} </p>\r\n                        <i className=\"far fa-trash-alt\" onClick={handleDelete}></i>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext, useEffect,useRef } from 'react'\r\nimport Noteitem from './Noteitem'\r\nimport noteContext from '../context/notes/NoteContext';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Notes() {\r\n\r\n    const history = useHistory();\r\n    const { notes,updateNote,currentNote,setCurrentNote,fetchNotes} = useContext(noteContext);\r\n    const closeRef = useRef(null);\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            fetchNotes();\r\n        }\r\n        else\r\n        {\r\n            history.push(\"/login\");\r\n        }\r\n            // eslint-disable-next-line\r\n    }, [])\r\n\r\n    const updatehandle = () => {\r\n        console.log(\"updating note..\");\r\n        closeRef.current.click();\r\n        \r\n        updateNote();  \r\n\r\n    }\r\n    const handleChange = (e)=>{\r\n        setCurrentNote({...currentNote, [e.target.name]:e.target.value});\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* modal */}\r\n            <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n                        <div className=\"modal-header\">\r\n                            <h5 className=\"modal-title\" id=\"exampleModalLabel\">Update Note</h5>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </div>\r\n                        <div className=\"modal-body\">\r\n                            <form>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"updatedTitle\" className=\"form-label\">Title</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"updatedTitle\" name=\"title\" value={currentNote.title} onChange={handleChange} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"updatedDesc\" className=\"form-label\">Description</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"updatedDesc\" name=\"description\" value={currentNote.description} onChange={handleChange} />\r\n                                </div>\r\n                                <div className=\"mb-3\">\r\n                                    <label htmlFor=\"updatedTag\" className=\"form-label\">Title</label>\r\n                                    <input type=\"text\" className=\"form-control\" id=\"updatedTag\" name=\"tag\" value={currentNote.tag} onChange={handleChange} />\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                        <div className=\"modal-footer\">\r\n                            <button ref={closeRef} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={updatehandle} >Save changes</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* end modal */}\r\n\r\n            <div className=\"row\">\r\n\r\n                {notes.length===0? <p>No notes to display</p>:\r\n                \r\n                notes.map((note) => {\r\n                    return (\r\n                        <Noteitem note={note} key={note._id} />\r\n                    )\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport AddNote from './AddNote';\r\nimport Login from './Login';\r\nimport Notes from './Notes';\r\n\r\n\r\nexport default function Home() {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        if (!localStorage.getItem('token')) {\r\n            history.push(\"/login\");\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [])\r\n    return (\r\n        <>\r\n            {localStorage.getItem('token') ?\r\n                <div className=\"container\">\r\n                    <AddNote />\r\n                    <div className=\"container mb-5\">\r\n                        <Notes />\r\n                    </div>\r\n                </div> : <Login />}\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport './Navbar.css'\r\nimport noteContext from '../context/notes/NoteContext'\r\n\r\n\r\nexport default function Navbar() {\r\n    const { setDarkmode } = useContext(noteContext);\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token');\r\n        history.push(\"/login\");\r\n    }\r\n    const handleDarkMode = () => {\r\n        setDarkmode();\r\n    }\r\n    return (\r\n        <>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark sticky-top\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">NotesOrange</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className={`nav-link ${location.pathname === '/' ? \"active\" : \"\"}`} aria-current=\"page\" to=\"/\">Home</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className={`nav-link ${location.pathname === '/about' ? \"active\" : \"\"}`} to=\"/about\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item dropdown\">\r\n                                <Link className=\"nav-link dropdown-toggle\" to=\"/\" id=\"navbarDarkDropdownMenuLink\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                    Account\r\n                                </Link>\r\n                                <ul className=\"dropdown-menu dropdown-menu-dark\" aria-labelledby=\"navbarDarkDropdownMenuLink\">\r\n                                    {localStorage.getItem('token') ?\r\n                                        <li><Link className=\"dropdown-item\" to=\"/login\" onClick={handleLogout}>Logout</Link></li> :\r\n                                        <><li><Link className=\"dropdown-item\" to=\"/login\">Login</Link></li>\r\n                                            <li><Link className=\"dropdown-item\" to=\"/signup\">Signup</Link></li></>}\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                        <div className=\"d-flex align-item-center\">\r\n                            <p className=\"text-light darktext\">Darkmode</p>\r\n                            <label className=\"switch mx-3\">\r\n                                <input type=\"checkbox\" />\r\n                                <span className=\"slider round\" onClick={handleDarkMode}></span>\r\n                            </label>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport noteContext from './NoteContext'\r\n\r\nexport default function NoteStates(props) {\r\n  const host = 'https://notesorange.herokuapp.com/user/notes/';\r\n  const userHost = 'https://notesorange.herokuapp.com/user/auth/';\r\n\r\n  const [colorMode,setColorMode] = useState(\"light\");\r\n  const setDarkmode = ()=>{\r\n    const body = document.getElementsByTagName(\"body\")[0];\r\n    if (colorMode===\"light\") {\r\n      body.style.backgroundColor = \"#010409\";\r\n      setColorMode(\"dark\");\r\n    }\r\n    else{\r\n      body.style.backgroundColor = \"#fff\";\r\n      setColorMode(\"light\");\r\n    }\r\n  }\r\n  const [notes, setNotes] = useState([{}]);\r\n  const [msg, setMsg] = useState({\r\n    msg: \"\",\r\n    msgType: \"\"\r\n  });\r\n  const [currentNote, setCurrentNote] = useState({\r\n    _id: \"\",\r\n    title: \"\",\r\n    description: \"\",\r\n    tag: \"\"\r\n  });\r\n\r\n  const setAlert = (msg, msgtype) => {\r\n    setMsg({\r\n      msg: msg,\r\n      msgType: msgtype\r\n    })\r\n  }\r\n  const fetchNotes = async () => {\r\n    const fetchedData = await fetch(`${host}fetchnotes`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n    })\r\n    const data = await fetchedData.json();\r\n    setNotes(data);\r\n    console.log(\"data set\");\r\n  }\r\n  const addNote = async (title, description, tag) => {\r\n    const myNote = {\r\n      title: title,\r\n      description: description,\r\n      tag: tag\r\n    };\r\n    const fetchedData = await fetch(`${host}createnote`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify(myNote)\r\n    })\r\n    const data = await fetchedData.json();\r\n    setNotes(notes.concat(data));\r\n  }\r\n\r\n\r\n  const deleteNote = async (noteId) => {\r\n    console.log(\"Deleting note with id\", noteId);\r\n    const newNote = notes.filter((note) => {\r\n      return note._id !== noteId;\r\n    })\r\n    setNotes(newNote);\r\n\r\n    //removing note from database\r\n    await fetch(`${host}deletenote/${noteId}`, {\r\n      method: 'DELETE',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n    })\r\n    // const data = await fetchedData.json();\r\n\r\n  }\r\n\r\n\r\n  const updateNote = async () => {\r\n    const updatedNote = {\r\n      title: currentNote.title,\r\n      description: currentNote.description,\r\n      tag: currentNote.tag\r\n    };\r\n    let temp = JSON.parse(JSON.stringify(notes));\r\n    for (let i = 0; i < notes.length; i++) {\r\n      if (temp[i]._id === currentNote._id) {\r\n        temp[i].title = currentNote.title;\r\n        temp[i].description = currentNote.description;\r\n        temp[i].tag = currentNote.tag;\r\n        break;\r\n      }\r\n\r\n    }\r\n    setNotes(temp);\r\n    await fetch(`${host}updatenote/${currentNote._id}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'auth-token': localStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify(updatedNote)\r\n    })\r\n\r\n  }\r\n\r\n  const loginProvider = async (email, password, history) => {\r\n    const myNote = {\r\n      email: email,\r\n      password: password,\r\n    };\r\n    const fetchedData = await fetch(`${userHost}userlogin`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(myNote)\r\n    })\r\n\r\n    const token = await fetchedData.json();\r\n    //set token to local storage and redirect\r\n    if (!token.success) {\r\n      setAlert(\"Error : Invalid credentials..\", \"warning\");\r\n    }\r\n    else {\r\n      localStorage.setItem('token', token.authToken);\r\n      history.push(\"/\");\r\n      setAlert(\"Login successfull..\", \"success\");\r\n    }\r\n  }\r\n  const signUpProvider = async (name, email, password, history) => {\r\n    const mySignup = {\r\n      name: name,\r\n      email: email,\r\n      password: password,\r\n    };\r\n    const fetchedData = await fetch(`${userHost}createuser`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(mySignup)\r\n    })\r\n\r\n    const token = await fetchedData.json();\r\n    \r\n\r\n    if (!token.success) {\r\n      setAlert(\"Error : User with this email already exists..\", \"warning\");\r\n    }\r\n    else {\r\n      localStorage.setItem('token', token.authToken);\r\n      history.push(\"/\");\r\n      setAlert(\"Signup successfull..\", \"success\");\r\n    }\r\n\r\n  }\r\n\r\n  const noteValues = {\r\n    notes,colorMode,setDarkmode,setNotes, msg, setMsg, deleteNote, addNote, updateNote, currentNote, setCurrentNote, loginProvider, signUpProvider,fetchNotes\r\n  }\r\n\r\n  return (\r\n    <noteContext.Provider value={noteValues}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport noteContext from '../context/notes/NoteContext';\r\n\r\nexport default function Alert() {\r\n\r\n    const {setMsg,msg} = useContext(noteContext);\r\n    const handleClick = ()=>{\r\n        setMsg({\r\n            msg:\"\",\r\n            msgType:\"\"\r\n        });\r\n    }\r\n    return (\r\n        <>\r\n            {msg.msg && <div className={`alert alert-${msg.msgType} alert-dismissible fade show hei`} role=\"alert\">\r\n                {msg.msg}\r\n                <button type=\"button\" className=\"btn-close btn-alert\" onClick={handleClick}></button>\r\n            </div>}\r\n\r\n        </>\r\n    )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from 'react-router-dom';\r\nimport noteContext from '../context/notes/NoteContext'\r\n\r\nexport default function Signup() {\r\n    const history = useHistory();\r\n    const { signUpProvider,colorMode } = useContext(noteContext);\r\n    const [signupInputs, setSignupInputs] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const handleSignup = (e) => {\r\n        e.preventDefault();\r\n        signUpProvider(signupInputs.name, signupInputs.email, signupInputs.password, history);\r\n\r\n    }\r\n    const handleChange = (e) => {\r\n        setSignupInputs({ ...signupInputs, [e.target.name]: e.target.value });\r\n    }\r\n    return (\r\n        <div className=\"container my-4\">\r\n            <form>\r\n                <h2 className={`my-4 textmode-${colorMode}`}>Signup</h2>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className={`form-label textmode-${colorMode}`}>Username</label>\r\n                    <input type=\"text\" className={`form-control inputs-${colorMode}`} id=\"username\" name=\"name\" aria-describedby=\"nameHelp\" required minLength={3} onChange={handleChange} />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputEmail1\" className={`form-label textmode-${colorMode}`}>Email address</label>\r\n                    <input type=\"email\" className={`form-control inputs-${colorMode}`} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" required onChange={handleChange} />\r\n                    <div id=\"emailHelp\" className={`form-text textmode-${colorMode}`}>We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"exampleInputPassword1\" className={`form-label textmode-${colorMode}`}>Password</label>\r\n                    <input type=\"password\" className={`form-control inputs-${colorMode}`} id=\"password\" name=\"password\" required minLength={5} onChange={handleChange} />\r\n                </div>\r\n                <button type=\"submit\" className=\"btn btn-primary\" onClick={handleSignup}>Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\nimport About from './components/About'\nimport Home from './components/Home'\nimport Navbar from './components/Navbar'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport NoteStates from './context/notes/NoteStates';\nimport Alert from './components/Alert';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\n\n\n\nexport default function App() {\n  const navbarProps = {\n    title:\"NotesOrange\"\n  }\n  return (\n    <>\n    <NoteStates>\n      <Router>\n          <Navbar  navbarProps = {navbarProps} />\n          <Alert msg/>\n          <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/about\">\n                <About />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n          </Switch>\n      </Router>\n    </NoteStates> \n    </>\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}